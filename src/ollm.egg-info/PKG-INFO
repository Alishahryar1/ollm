Metadata-Version: 2.4
Name: ollm
Version: 0.1.2
Summary: LLM inference library
Author-email: Anuar Sharafudinov <anuarsh@ailabs.us>
License: MIT License
        
        Copyright (c) 2025 AILabs
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/Mega4alik/ollm
Project-URL: Bug Tracker, https://github.com/Mega4alik/ollm/issues
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: torch
Requires-Dist: transformers>=4.55.0
Dynamic: license-file

# oLLM

### Installation 
#"kvikio" kvikio-cu12 # for CUDA 12
pip install -e .

curl -s https://pypi.org/pypi/<name>/json | jq .

run as PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True  python llama.py

| Model   | Weights | KV cache | Hidden states | Emb+Head | **Total**    | 
| ------- | ------- | -------- | ------------- | -------- | ------------ |
| **1B**  | 2 GB    | 12.6 GB  | 0.4 GB        | 1.0 GB   | **\~16 GB**  |
| **8B**  | 16 GB   | 52.4 GB  | 0.8 GB        | 2.0 GB   | **\~71 GB**  |
| **70B** | 140 GB  | 262 GB   | 1.6 GB        | 4.0 GB   | **\~408 GB** |

## llama3-1B "meta-llama/Llama-3.2-1B-Instruct"

## llama3-3B (meta-llama/Llama-3.2-3B-Instruct) with model weights on SSD NVMe
- on simple test (30 tokens generation with simple output) took
  no parallel = 58s, loading next in thread(2 total) = 49s, up to 3 in parallel = 48s
- on 10k test (max_tokens=30) took: 1 next in thread = 5min52s (after 1st token, following ones took only 2/3 seconds each)


## llama3-8B (meta-llama/Llama-3.1-8B-Instruct). Default: NoKVCache, attention(q_block_size=64, k_block_size=512)
- on simple test (input=46, output=30 tokens) took: 1NextInThread =  3min54s
- on 10k test (max_tokens=30) took: 1NextInThread  = 8min57s (after 1st token, following ones took 7-8 seconds each)
  Llama forward finished. 2025-08-23 18:53:17.312316 Stats: layer_load: [0.027, 0.003, 0.003, 0.02, 0.063], kvsave: [0.036, 0.055, 0.057, 0.054, 0.055],
  Llama forward finished. 2025-08-23 18:53:36.691547 Stats: layer_load: [0.024, 0.003, 0.003, 0.02, 0.066], kvload: [2.354, 0.744, 0.242, 0.256, 0.251],



